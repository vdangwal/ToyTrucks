version: '3.4'

services: 
  catalog_postgres_db:
    image: postgres:alpine
    environment: 
      POSTGRES_DB: "hess_catalog_db"
      POSTGRES_USER: "marcus"
      POSTGRES_PASSWORD: "password"
    ports: 
      - 5432:5432
    volumes:
      - catalogapi_data:/var/lib/postgresql/data
  
  basket_redis_db:
    image: redis:alpine
    #environment: 
    ports:
      - 6379:6379

  discount_postgres_db:
    #container_name: discountdb
    #restart: always
    image: postgres:alpine
    environment: 
      POSTGRES_DB: "DiscountDb"
      POSTGRES_USER: "marcus"
      POSTGRES_PASSWORD: "password"
    ports: 
      - 5431:5432
    volumes:
      - discountapi_data:/var/lib/postgresql/discountdata/

  order_sqlserver_db:
    image: postgres:alpine #mcr.microsoft.com/mssql/server:2017-latest
    container_name: order_sqlserver_db
    environment: 
      POSTGRES_DB: "Order_db"
      POSTGRES_USER: "marcus"
      POSTGRES_PASSWORD: "password"
    ports: 
      - 5430:5432
    # volumes:
    #   - orderapi_data:/var/lib/postgresql/discountdata/

  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   environment: 
  #     #POSTGRES_DB: ""
  #     PGADMIN_DEFAULT_EMAIL: "admin@turkish.com"
  #     PGADMIN_DEFAULT_PASSWORD: "password"
  #   ports: 
  #     - 5050:80
  #   volumes:
  #     - pgadmin_data:/root/.pgadmin

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - 8080:8000
      - 8090:9000
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalog_api:
    container_name: catalog_api
    build: 
      context: ./Services/Catalog/Catalog.Api
      target: debug
    environment: 
      POSTGRES_SERVER: "catalog_postgres_db"
      POSTGRES_DB: "hess_catalog_db"
      POSTGRES_USER: "marcus"
      POSTGRES_PASSWORD: "password"
    ports: 
      - 3500:4400
    volumes:
      - ./Services/Catalog/Catalog.Api/:/work/
    depends_on: 
      - catalog_postgres_db
   
  basket_api:
    container_name: basket_api
    build: 
      context: ./Services/Basket/Basket.Api
      target: debug
    environment: 
      REDIS_SERVER: "basket_redis_db"
      #grpcServiceUrl: http://discount_grpc:4404
      grpcServiceUrl: discount_grpc
    ports: 
      - 3502:4402
    volumes:
      - ./Services/Basket/Basket.Api/:/basketwork/
    depends_on: 
      - basket_redis_db


  discount_grpc:
    container_name: discount_grpc
    build: 
      context: ./Services/Discount/Discount.Grpc
      target: debug
    environment: 
      POSTGRES_SERVER: "discount_postgres_db"
      POSTGRES_DB: "DiscountDb"
      POSTGRES_USER: "marcus"
      POSTGRES_PORT: "5432"
      POSTGRES_PASSWORD: "password"
    ports: 
      - 3506:4404
    volumes:
      - ./Services/Discount/Discount.Grpc/:/discountgrpcwork/
    depends_on: 
      - discount_postgres_db

  order_api:
    container_name: order_api
    build: 
      context: . # ./Services/Ordering
      dockerfile: Services/Ordering/Ordering.Api/Dockerfile
      #target: debug
    environment: 
      ORDER_SERVER: "order_sqlserver_db"
      ORDER_DB: "OrderDb"
      ORDER_PORT: "5430"
      ORDER_USER: "marcus"
      ORDER_PASSWORD: "password"
    ports: 
      - 3508:4406
    volumes:
      - ./Services/Ordering/Ordering.Api/:/orderapiwork/
    depends_on: 
      - order_sqlserver_db 

volumes: 
  catalogapi_data:
  discountapi_data:
  #orderapi_data:
  portainer_data:
  #pgadmin_data:


