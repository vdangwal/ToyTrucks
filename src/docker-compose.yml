version: '3.4'
# docker build -t temp_catalog_api -f services/catalog/catalog.api/Dockerfile .  THis creates an image from the src dir...


services:
  catalogdb:
    image: postgres:alpine
    restart: "no"
    environment:
      POSTGRES_USER: "marcus"
      POSTGRES_PASSWORD: "password"
    ports:
      - 5432:5432
    volumes:
      - catalog_postgres_data:/data/catalogdb

  orderdb:
    image: mongo
    restart: "no"
    ports:
      - "27017:27017"
    volumes:
      - order_mongo_data:/data/orderdb
    logging:
      # turns off logging
      driver: none

  basketdb:
    image: redis:alpine
    restart: "no"
    ports:
      - "6379:6379"
    volumes:
      - basket_redis_data:/data/basketdb

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    restart: "no"
    environment:
      teds: ""
    ports:
      - "5672:5672"
      - "15672:15672"
    logging:
      # turns off logging
      driver: none

  catalog_api:
    container_name: catalog_api
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.Api/Dockerfile
      target: debug
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      POSTGRES_SERVER: "catalogdb"
      POSTGRES_DB: "catalogdb"
      POSTGRES_USER: "marcus"
      POSTGRES_PASSWORD: "password"
      EventBusAddress: "amqp://guest:guest@rabbitmq:5672"
      OutOfStockQueue: "outofstock-queue"
      InventoryUpdatedQueue: "inventoryupdated-queue"

    ports:
      - 3500:80
    volumes:
      - ./Services/Catalog/Catalog.Api/:/work/Services/Catalog/Catalog.Api/
    depends_on:
      - catalogdb

  basket_api:
    container_name: basket_api
    build:
      context: .
      dockerfile: Services/Basket/Basket.Api/Dockerfile
      target: debug
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      grpcServiceUrl: "http://discount_grpc:80"
      EventBusAddress: "amqp://guest:guest@rabbitmq:5672"
      BasketUpdatedQueue: "basketinventoryupdated-queue"
      RedisServerUrl: "basketdb"
    ports:
      - 3502:443
    volumes:
      - ./Services/Basket/Basket.Api/:/basketwork/Services/Basket/Basket.Api/
    depends_on:
      - basketdb #basket_redis_db
      - rabbitmq

  discount_grpc:
    container_name: discount_grpc
    build:
      context: ./Services/Discount/Discount.Grpc
      target: debug
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      POSTGRES_SERVER: "catalogdb"
      POSTGRES_DB: "discountdb"
      POSTGRES_USER: "marcus"
      POSTGRES_PORT: "5432"
      POSTGRES_PASSWORD: "password"
    ports:
      - 3506:80
    volumes:
      - ./Services/Discount/Discount.Grpc/:/discountgrpcwork/
    depends_on:
      - catalogdb

  order_api:
    container_name: order_api
    build:
      context: .
      dockerfile: Services/Orders/Orders.Api/Dockerfile
      target: debug
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      EventBusAddress: "amqp://guest:guest@rabbitmq:5672"
      BasketCheckoutQueue: "basketcheckout-queue"
      MONGO_SERVER: "orderdb"
      MONGO_PORT: "27017"
      MONGO_DB: "OrderDb"
      MONGO_COLLECTION: "Orders"
    ports:
      - 3508:80
    volumes:
      - ./Services/Orders/Orders.Api/:/orderapiwork/Services/Orders/Orders.Api/
    depends_on:
      #- catalogdb 
      - rabbitmq
      - orderdb

  mvc_frontend:
    container_name: mvc_frontend
    build:
      context: .
      dockerfile: Frontends/Mvc/Web/Dockerfile
      target: debug
    environment:
      TruckCatalogUri: "http://ocelot_api/trucks/"
      BasketUri: "http://ocelot_api/basket/"
      OrdersUri: "http://ocelot_api/orders/"
      ASPNETCORE_URLS: "https://+;http://+"
      ASPNETCORE_HTTPS_PORT: "8001"
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "8000:80"
      - "8001:443"
    volumes:
      - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets
      - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https/
    depends_on:
      - catalog_api
      - order_api
      - basket_api
      - ocelot_api

  ocelot_api:
    container_name: ocelot_api
    build:
      context: .
      dockerfile: ApiGateways/OcelotApi/Dockerfile
      target: debug
    environment:
      ASPNETCORE_ENVIRONMENT: Docked
    ports:
      - 8010:80
    depends_on:
      - catalog_api
      - order_api
      - basket_api

volumes:
  order_mongo_data: null
  basket_redis_data: null
  catalog_postgres_data:

    null
    # shopping_aggregator:
    #   container_name: shopping_aggregator
    #   build:
    #     context: .
    #     dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile
    #     target: debug
    #   environment: 
    #     ASPNETCORE_ENVIRONMENT: Development
    #     "ApiSettings:CatalogUrl": "http://catalog_api"
    #   ports:
    #     - 5005:80
    #   depends_on: 
    #     - catalog_api
    #     - inventory_api
    #     - order_api
    #     - basket_api

    # pgadmin:
    #   container_name: pgadmin
    #   image: dpage/pgadmin4
    #   environment: 
    #     #POSTGRES_DB: ""
    #     PGADMIN_DEFAULT_EMAIL: "admin@turkish.com"
    #     PGADMIN_DEFAULT_PASSWORD: "password"
    #   ports: 
    #     - 5050:80
    #   volumes:
    #     - pgadmin_data:/root/.pgadmin

    # portainer:
    #   image: portainer/portainer-ce
    #   container_name: portainer
    #   ports:
    #     - 8080:8000
    #     - 8090:9000
    #   volumes: 
    #     - /var/run/docker.sock:/var/run/docker.sock
    #     - portainer_data:/data
